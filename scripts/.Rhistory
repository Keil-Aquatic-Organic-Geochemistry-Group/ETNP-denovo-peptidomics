#Step 1: Instal DESeq2 and Load Package
write.table(tmp.sig, "Phel_DEGlist.tab", row.names = T)
install.packages("circlize")
install.packages("plyr")
install.packages("migest")
library("migest")
demo(cfplot_reg, package = "migest", ask = FALSE)
installed.packages("dplyr")
library("migest")
demo(cfplot_reg, package = "migest", ask = FALSE)
file.show(system.file("demo/cfplot_reg.R", package = "migest"))
library("migest")
demo(cfplot_nat, package = "migest", ask = FALSE)
install.packages("dplyr")
library("migest")
demo(cfplot_reg, package = "migest", ask = FALSE)
install.packages("tidyr")
library("migest")
demo(cfplot_reg, package = "migest", ask = FALSE)
library("migest")
demo(cfplot_med, package = "migest", ask = FALSE)
library("migest")
demo(cfplot_reg, package = "migest, ask = FALSE")
library("migest")
demo(cfplot_reg, package = "migest", ask = FALSE)
library("migest")
demo(cfplot_reg, package = "migest", ask = FALSE)
library("migest")
demo(cfplot_reg, package = "migest", ask = FALSE)
library("migest")
demo(cfplot_reg, package = "migest", ask = FALSE)
library("migest")
demo(cfplot_nat, package = "migest", ask = FALSE)
dir()
getwd()
library(readr)
hw1_data <- read_csv("~/Documents/coursera_r/hw1_data.csv")
View(hw1_data)
[1:2]
print(hw1_data[1:2,])
nrow(hw1_data)
tail(hw1_data,2)
print(hw1_data[47,])
length(which(is.na(hw1_data)))
ozna<-subset(hw1_data,is.na(Ozone))
nrow(ozna)
oznotna<-subset(hw1_data,!is.na(Ozone))
mean(ozanotna)
apply(oznotna,2,mean)
data18<-subset(hw1_data,hw1_data$Ozone>31 & hw1_data$Temp>90,select = Solar.R)
apply(data18,2,mean)
data19<-subset(hw1_data,hw1_data$Month==6,select=Temp)
apply(data19,2,mean)
data20<-subset(hw1_data,!is.na(Ozone) & hw1_data$Month==5,select=Ozone)
apply(data20,2,max)
x<-1:4
y<-2:3
x+y
x<-c(4,TRUE)
class(x)
x<-c(1,3,5)
y<-c(3,2,10)
rbind(x,y)
x<-list(2,"a","b",TRUE)
x[[1]]
R.version.string
install.packages("swirl")
packageVersion("swirl")
library(swirl)
ls()
rm(list=ls())
swirl()
install_from_swirl("R Programming")
swirl()
5+7
x <- 5+7
x
y<-x-3
y
z<-c(1.1,9,3.14)
?c
z
c(z,555,z)
z*2+100
my_sqrt<-sqrt(z-1)
print(my_sqrt)
my_sqrt
mydiv<-z/my_sqrt
mydiv <- z / my_sqrt
my_div <- z / my_sqrt
my_div
c(1,2,3,4) + c(0,10)
c(1,2,3,4) + c(0,10,100)
z*2+1000
my_div
getwd()
ls()
x <- 9
ls()
dir()
?list.files
args(list.files())
args(list.files)
old.dir <- dir()
old.dir <- getwd()
dir.create(testdir)
dir.create("testdir")
setwd("testdir")
getwd()
file.create("mytest.R")
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path("mytest3.R", folder1, folder2)
file.path("mytest3.R", 'folder1', 'folder2')
file.path("folder1", "folder2")
?dir.create
play()
nxt()
file.path(dir.create("testdir2","testdir3"))
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
setwd(testdir)
setwd(testdir2)
setwd("testdir")
setwd("testdir2")
setwd(old.dir)
1:20
pi:10
15:1
?`:`
seq(1, 20)
seq(0, 10, by=0.5)
my_seq <- seq(5, 10, length=30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times=40)
rep(c(0, 1, 2), times=10)
rep(c(0, 1, 2), each = 10)
getwd()
?unlink
unlink(testdir, recursive = TRUE)
unlink("testdir", recursive = TRUE)
swirl()
num_vect <- c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >= 6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Megan")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(1:3, c("X","Y","Z") sep = "")
paste(1:3, c("X","Y","Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y <- rnorm(1000)
z <- rep(NA, 1000)
my_data <- sample(c(y, z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y > 0]
x[x > 0]
x[!is.na(x) & x > 0]
x[c(3, 5, 7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
my_matrix2 <- matrix(1:20, nrow = 4, ncol = 5, byrow = FALSE, dimnames = NULL)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
swirl()
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
10 <= 10
5 != 7
5 != 7
5 !==7
5 !== 7
! 5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints > 5
which(ints > 7)
any(ints < 0)
all(ints > 0)
library(swirl)
swirl()
x <- 11:30
x
library(tidyverse)
ggplot2
library(ggplot2)
library(tidyr)
install.packages("ggplot2")
library(ggplot2)
libary(readr)
install.packages(readr)
"readr"
install.packages("readr")
library(dplyr)
library(tidyr)
library(tidyr)
install.packages("titanic")
library(titanic)
data("titanic_train", package = "titanic")
titanic <- titanic_train
install.packages("faraway")
library(faraway)
data("worldcup")
library(ggplot2)
object <- ggplot(dataframe, aes(x = column_1, y = column_2))
object <- ggplot(data, aes(x = column_1, y = column_2))
object <- ggplot(dataframe, aes(x = column_1, y = column_2))
ggplot(dataframe, aes(x = column_1, y = column_2))
?worldcup
plot(worldcup)
data = dataframe
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
library(tidyverse)
sessionInfo()
sessionInfo()
install.packages("RSQLite")
source(file = "Documents/git-repos/2017-etnp/scripts/")
setwd("Documents/git-repos/2017-etnp/scripts/")
source(file = "cellcomp-med4-etnp-bar")
libary plot_ly()
library plot_ly()
q()
